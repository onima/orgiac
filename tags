!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ACTIVE_RACE_NUM	./models/raceboard.rb	/^  ACTIVE_RACE_NUM = 6$/;"	C	class:RaceBoard
ActiveRacesAlreadyPicked	./errors.rb	/^class ActiveRacesAlreadyPicked < RuntimeError$/;"	c	inherits:RuntimeError
GameMaster	./models/game_master.rb	/^class GameMaster$/;"	c
GameMasterTest	./tests/models/game_master_test.rb	/^class GameMasterTest < MiniTest::Unit::TestCase$/;"	c	inherits:MiniTest.Unit.TestCase
GameState	./config/game_state.rb	/^class GameState$/;"	c
IdenticalPlayersNames	./errors.rb	/^class IdenticalPlayersNames < RuntimeError$/;"	c	inherits:RuntimeError
LandType	./models/land_type.rb	/^class LandType$/;"	c
Map	./models/map.rb	/^class Map$/;"	c
MapDrawer	./models/map_drawer.rb	/^class MapDrawer$/;"	c
NotEnoughRaces	./errors.rb	/^class NotEnoughRaces < RuntimeError$/;"	c	inherits:RuntimeError
Player	./models/player.rb	/^class Player$/;"	c
PlayerDoNotHaveName	./errors.rb	/^class PlayerDoNotHaveName < RuntimeError$/;"	c	inherits:RuntimeError
PlayersHaveBeenChosen	./errors.rb	/^class PlayersHaveBeenChosen < RuntimeError$/;"	c	inherits:RuntimeError
REGION_TRIBE_RATIO	./models/map_drawer.rb	/^  REGION_TRIBE_RATIO = 4$/;"	C	class:MapDrawer
Race	./models/race.rb	/^class Race$/;"	c
RaceBoard	./models/raceboard.rb	/^class RaceBoard$/;"	c
RaceNotActive	./errors.rb	/^class RaceNotActive < RuntimeError$/;"	c	inherits:RuntimeError
Region	./models/region.rb	/^class Region$/;"	c
SerializeTest	./tests/serializer/serializer_test.rb	/^class SerializeTest < MiniTest::Unit::TestCase$/;"	c	inherits:MiniTest.Unit.TestCase
Serializer	./serializer/serialize.rb	/^class Serializer$/;"	c
TestAddRaceChoice	./tests/models/raceboard_test.rb	/^  class TestAddRaceChoice < TestRaceBoard$/;"	c	class:TestRaceBoard	inherits:TestRaceBoard
TestMapDrawer	./tests/models/map_drawer_test.rb	/^class TestMapDrawer < MiniTest::Unit::TestCase$/;"	c	inherits:MiniTest.Unit.TestCase
TestPickActiveRaces	./tests/models/raceboard_test.rb	/^  class TestPickActiveRaces < TestRaceBoard$/;"	c	class:TestRaceBoard	inherits:TestRaceBoard
TestPickRace	./tests/models/raceboard_test.rb	/^  class TestPickRace < TestRaceBoard$/;"	c	class:TestRaceBoard	inherits:TestRaceBoard
TestPlayer	./tests/models/player_test.rb	/^class TestPlayer < MiniTest::Unit::TestCase$/;"	c	inherits:MiniTest.Unit.TestCase
TestRaceBoard	./tests/models/raceboard_test.rb	/^class TestRaceBoard < MiniTest::Unit::TestCase$/;"	c	inherits:MiniTest.Unit.TestCase
TestRegion	./tests/models/region_test.rb	/^class TestRegion < MiniTest::Unit::TestCase$/;"	c	inherits:MiniTest.Unit.TestCase
TestTurntracker	./tests/models/turn_tracker_test.rb	/^class TestTurntracker < MiniTest::Unit::TestCase$/;"	c	inherits:MiniTest.Unit.TestCase
TooManyPlayers	./errors.rb	/^class TooManyPlayers < RuntimeError$/;"	c	inherits:RuntimeError
TooManyRacesRequired	./errors.rb	/^class TooManyRacesRequired < RuntimeError$/;"	c	inherits:RuntimeError
TurnTracker	./models/turn_tracker.rb	/^class TurnTracker$/;"	c
active_races	./models/raceboard.rb	/^  def active_races$/;"	f	class:RaceBoard
actual_turn	./models/turn_tracker.rb	/^  attr_accessor :turns_left, :players, :turn_played, :actual_turn$/;"	f	class:TurnTracker
actual_turn=	./models/turn_tracker.rb	/^  attr_accessor :turns_left, :players, :turn_played, :actual_turn$/;"	f	class:TurnTracker
add_race_choice	./models/raceboard.rb	/^  def add_race_choice$/;"	f	class:RaceBoard
assign_lands	./models/map_drawer.rb	/^  def assign_lands$/;"	f	class:MapDrawer
assign_players_color	./models/game_master.rb	/^  def assign_players_color(players)$/;"	f	class:GameMaster
assign_tribes	./models/map_drawer.rb	/^  def assign_tribes$/;"	f	class:MapDrawer
can_attack_region?	./models/player.rb	/^  def can_attack_region?(region)$/;"	f	class:Player
can_conquest_region_on_first_turn?	./models/player.rb	/^  def can_conquest_region_on_first_turn?(region)$/;"	f	class:Player
can_pay_for_race?	./models/player.rb	/^  def can_pay_for_race?(race)$/;"	f	class:Player
can_yet_attack?	./models/player.rb	/^  def can_yet_attack?(map)$/;"	f	class:Player
cardinal_point	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
cardinal_point=	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
coins	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
coins=	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
color	./models/land_type.rb	/^  attr_reader :name, :conquest_points, :color$/;"	f	class:LandType
color	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
color=	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
conquest_points	./models/land_type.rb	/^  attr_reader :name, :conquest_points, :color$/;"	f	class:LandType
coordinates	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
coordinates=	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
create_players	./models/game_master.rb	/^  def create_players(players_names)$/;"	f	class:GameMaster
create_region	./models/map_drawer.rb	/^  def create_region(coordinates, width_index, height_index)$/;"	f	class:MapDrawer
deserialize	./serializer/serialize.rb	/^  def deserialize(players)$/;"	f	class:Serializer
draw_hexagon_col	./models/map_drawer.rb	/^  def draw_hexagon_col(x, x_offset, y_offset, width_index)$/;"	f	class:MapDrawer
draw_hexagons	./models/map_drawer.rb	/^  def draw_hexagons$/;"	f	class:MapDrawer
draw_map	./models/map_drawer.rb	/^  def draw_map$/;"	f	class:MapDrawer
external_borders	./models/region.rb	/^  def external_borders$/;"	f	class:Region
find_hexagon_coordinates	./models/map_drawer.rb	/^  def find_hexagon_coordinates(x_centre, y_centre, radius)$/;"	f	class:MapDrawer
first_active_race	./tests/models/raceboard_test.rb	/^    def first_active_race$/;"	f	class:TestRaceBoard.TestAddRaceChoice
grid_width	./models/map.rb	/^  attr_reader :width, :height, :grid_width$/;"	f	class:Map
has_east_border?	./models/region.rb	/^  def has_east_border?$/;"	f	class:Region
has_enough_troops?	./models/player.rb	/^  def has_enough_troops?(region)$/;"	f	class:Player
has_external_border?	./models/region.rb	/^  def has_external_border?$/;"	f	class:Region
has_north_border?	./models/region.rb	/^  def has_north_border?$/;"	f	class:Region
has_south_border?	./models/region.rb	/^  def has_south_border?$/;"	f	class:Region
has_tribe	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
has_tribe=	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
has_west_border?	./models/region.rb	/^  def has_west_border?$/;"	f	class:Region
height	./models/map.rb	/^  attr_reader :width, :height, :grid_width$/;"	f	class:Map
id	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
id=	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
initialize	./config/game_state.rb	/^  def initialize$/;"	f	class:GameState
initialize	./models/land_type.rb	/^  def initialize(name, conquest_points, color)$/;"	f	class:LandType
initialize	./models/map.rb	/^  def initialize (width, height, grid_width)$/;"	f	class:Map
initialize	./models/map_drawer.rb	/^  def initialize(map)$/;"	f	class:MapDrawer
initialize	./models/player.rb	/^  def initialize(name, cardinal_point)$/;"	f	class:Player
initialize	./models/race.rb	/^  def initialize(name, troops_number)$/;"	f	class:Race
initialize	./models/raceboard.rb	/^  def initialize(rules)$/;"	f	class:RaceBoard
initialize	./models/region.rb	/^  def initialize(coordinates, width, height, id)$/;"	f	class:Region
initialize	./models/turn_tracker.rb	/^  def initialize(turns_left, players)$/;"	f	class:TurnTracker
is_not_a_sea?	./models/region.rb	/^  def is_not_a_sea?$/;"	f	class:Region
land_type	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
land_type=	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
land_types	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
land_types	./models/map_drawer.rb	/^  def land_types$/;"	f	class:MapDrawer
land_types=	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
land_types_without_sea	./models/map_drawer.rb	/^  def land_types_without_sea$/;"	f	class:MapDrawer
map	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
map	./models/map_drawer.rb	/^  attr_reader :map$/;"	f	class:MapDrawer
map=	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
map_generate	./config/game_state.rb	/^  def map_generate$/;"	f	class:GameState
middle_region	./models/map_drawer.rb	/^  def middle_region$/;"	f	class:MapDrawer
name	./models/land_type.rb	/^  attr_reader :name, :conquest_points, :color$/;"	f	class:LandType
name	./models/player.rb	/^  attr_reader :name$/;"	f	class:Player
name	./models/race.rb	/^  attr_reader :name$/;"	f	class:Race
neutral_defense_points	./models/region.rb	/^  def neutral_defense_points$/;"	f	class:Region
occupied?	./models/region.rb	/^  def occupied?(players)$/;"	f	class:Region
occupied_regions	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
occupied_regions=	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
occupied_regions_have_border_with_region?	./models/player.rb	/^  def occupied_regions_have_border_with_region?(region)$/;"	f	class:Player
pay	./models/player.rb	/^  def pay(coins)$/;"	f	class:Player
pay_for_race	./models/player.rb	/^  def pay_for_race(race)$/;"	f	class:Player
pick_active_races	./models/raceboard.rb	/^  def pick_active_races$/;"	f	class:RaceBoard
pick_race	./models/raceboard.rb	/^  def pick_race(chosen_race, player)$/;"	f	class:RaceBoard
player_defense	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
player_defense=	./models/region.rb	/^  attr_accessor :coordinates, :land_type, :has_tribe, :id, :player_defense$/;"	f	class:Region
players	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
players	./models/turn_tracker.rb	/^  attr_accessor :turns_left, :players, :turn_played, :actual_turn$/;"	f	class:TurnTracker
players=	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
players=	./models/turn_tracker.rb	/^  attr_accessor :turns_left, :players, :turn_played, :actual_turn$/;"	f	class:TurnTracker
price_of_race	./models/player.rb	/^  def price_of_race(race)$/;"	f	class:Player
race_choices	./models/raceboard.rb	/^  attr_accessor :races, :race_choices$/;"	f	class:RaceBoard
race_choices=	./models/raceboard.rb	/^  attr_accessor :races, :race_choices$/;"	f	class:RaceBoard
raceboard	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
raceboard=	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
races	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
races	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
races	./models/raceboard.rb	/^  attr_accessor :races, :race_choices$/;"	f	class:RaceBoard
races=	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
races=	./models/player.rb	/^  attr_accessor :coins, :cardinal_point, :races, :occupied_regions, :color$/;"	f	class:Player
races=	./models/raceboard.rb	/^  attr_accessor :races, :race_choices$/;"	f	class:RaceBoard
region_is_not_sea?	./models/map_drawer.rb	/^  def region_is_not_sea?(index)$/;"	f	class:MapDrawer
regions	./models/map.rb	/^  attr_accessor :regions$/;"	f	class:Map
regions	./models/map_drawer.rb	/^  def regions$/;"	f	class:MapDrawer
regions=	./models/map.rb	/^  attr_accessor :regions$/;"	f	class:Map
regions_without_sea	./models/map_drawer.rb	/^  def regions_without_sea$/;"	f	class:MapDrawer
reset!	./config/game_state.rb	/^  def reset!$/;"	f	class:GameState
round_coordinates	./models/region.rb	/^  def round_coordinates$/;"	f	class:Region
sea_land_type	./models/map_drawer.rb	/^  def sea_land_type$/;"	f	class:MapDrawer
serialize	./serializer/serialize.rb	/^  def serialize(players)$/;"	f	class:Serializer
serialize_land_type	./serializer/serialize.rb	/^  def serialize_land_type(land_type)$/;"	f	class:Serializer
serialize_race	./serializer/serialize.rb	/^  def serialize_race(race)$/;"	f	class:Serializer
serialize_region	./serializer/serialize.rb	/^  def serialize_region(region)$/;"	f	class:Serializer
setup	./tests/models/game_master_test.rb	/^  def setup$/;"	f	class:GameMasterTest
setup	./tests/models/map_drawer_test.rb	/^  def setup$/;"	f	class:TestMapDrawer
setup	./tests/models/player_test.rb	/^  def setup$/;"	f	class:TestPlayer
setup	./tests/models/raceboard_test.rb	/^  def setup$/;"	f	class:TestRaceBoard
setup	./tests/models/region_test.rb	/^  def setup$/;"	f	class:TestRegion
setup	./tests/models/turn_tracker_test.rb	/^  def setup$/;"	f	class:TestTurntracker
setup	./tests/serializer/serializer_test.rb	/^  def setup$/;"	f	class:SerializeTest
svg_coordinates	./models/region.rb	/^  def svg_coordinates$/;"	f	class:Region
test_adds_a_race_choice	./tests/models/raceboard_test.rb	/^    def test_adds_a_race_choice$/;"	f	class:TestRaceBoard.TestAddRaceChoice
test_adds_no_coins_to_the_race_choice	./tests/models/raceboard_test.rb	/^    def test_adds_no_coins_to_the_race_choice$/;"	f	class:TestRaceBoard.TestAddRaceChoice
test_assign_lands_randomly_assigns_lands_to_regions	./tests/models/map_drawer_test.rb	/^  def test_assign_lands_randomly_assigns_lands_to_regions$/;"	f	class:TestMapDrawer
test_assign_players_color	./tests/models/game_master_test.rb	/^  def test_assign_players_color$/;"	f	class:GameMasterTest
test_can_pay_for_race	./tests/models/player_test.rb	/^  def test_can_pay_for_race$/;"	f	class:TestPlayer
test_create_player_raises_error_if_one_of_players_names_is_empty	./tests/models/game_master_test.rb	/^  def test_create_player_raises_error_if_one_of_players_names_is_empty$/;"	f	class:GameMasterTest
test_create_player_raises_error_if_players_names_not_unique	./tests/models/game_master_test.rb	/^  def test_create_player_raises_error_if_players_names_not_unique$/;"	f	class:GameMasterTest
test_create_players_adds_players_to_the_game	./tests/models/game_master_test.rb	/^  def test_create_players_adds_players_to_the_game$/;"	f	class:GameMasterTest
test_create_players_raise_error_if_there_are_too_many_players	./tests/models/game_master_test.rb	/^  def test_create_players_raise_error_if_there_are_too_many_players$/;"	f	class:GameMasterTest
test_create_players_raises_error_if_players_have_been_chosen	./tests/models/game_master_test.rb	/^  def test_create_players_raises_error_if_players_have_been_chosen$/;"	f	class:GameMasterTest
test_external_borders_returns_no_points_if_region_is_in_the_middle	./tests/models/region_test.rb	/^  def test_external_borders_returns_no_points_if_region_is_in_the_middle$/;"	f	class:TestRegion
test_external_borders_returns_the_cardinal_points	./tests/models/region_test.rb	/^  def test_external_borders_returns_the_cardinal_points$/;"	f	class:TestRegion
test_find_hexagon_coordinates_returns_points_of_a_polygon	./tests/models/map_drawer_test.rb	/^  def test_find_hexagon_coordinates_returns_points_of_a_polygon$/;"	f	class:TestMapDrawer
test_has_external_border_returns_a_visual_description_of_the_borders	./tests/models/region_test.rb	/^  def test_has_external_border_returns_a_visual_description_of_the_borders$/;"	f	class:TestRegion
test_has_external_border_returns_false_if_it_is_in_the_middle	./tests/models/region_test.rb	/^  def test_has_external_border_returns_false_if_it_is_in_the_middle$/;"	f	class:TestRegion
test_has_external_border_returns_true_if_it_is_on_a_corner	./tests/models/region_test.rb	/^  def test_has_external_border_returns_true_if_it_is_on_a_corner$/;"	f	class:TestRegion
test_if_array_turn_played_hold_a_player	./tests/models/turn_tracker_test.rb	/^  def test_if_array_turn_played_hold_a_player$/;"	f	class:TestTurntracker
test_if_each_region_has_the_good_idea	./tests/models/map_drawer_test.rb	/^  def test_if_each_region_has_the_good_idea$/;"	f	class:TestMapDrawer
test_if_player_can_attack_region	./tests/models/player_test.rb	/^  def test_if_player_can_attack_region$/;"	f	class:TestPlayer
test_if_player_can_conquest_region_on_first_turn	./tests/models/player_test.rb	/^  def test_if_player_can_conquest_region_on_first_turn$/;"	f	class:TestPlayer
test_if_player_can_yet_attack	./tests/models/player_test.rb	/^  def test_if_player_can_yet_attack$/;"	f	class:TestPlayer
test_if_player_has_enough_troops?	./tests/models/player_test.rb	/^  def test_if_player_has_enough_troops?$/;"	f	class:TestPlayer
test_if_region_is_not_a_sea	./tests/models/region_test.rb	/^  def test_if_region_is_not_a_sea$/;"	f	class:TestRegion
test_if_region_is_occupied	./tests/models/region_test.rb	/^  def test_if_region_is_occupied$/;"	f	class:TestRegion
test_if_serialize_method_serialize_players	./tests/serializer/serializer_test.rb	/^  def test_if_serialize_method_serialize_players$/;"	f	class:SerializeTest
test_if_turns_left_decrease_and_actual_turn_increase	./tests/models/turn_tracker_test.rb	/^  def test_if_turns_left_decrease_and_actual_turn_increase$/;"	f	class:TestTurntracker
test_is_player_territories_has_borders_with_region	./tests/models/player_test.rb	/^  def test_is_player_territories_has_borders_with_region$/;"	f	class:TestPlayer
test_it_adds_coins_to_race_choices_depending_on_the_race_position	./tests/models/raceboard_test.rb	/^    def test_it_adds_coins_to_race_choices_depending_on_the_race_position$/;"	f	class:TestRaceBoard.TestPickRace
test_map_have_differents_tribes_on_different_regions	./tests/models/map_drawer_test.rb	/^  def test_map_have_differents_tribes_on_different_regions$/;"	f	class:TestMapDrawer
test_raise_race_not_active_error_if_the_race_is_not_active	./tests/models/raceboard_test.rb	/^    def test_raise_race_not_active_error_if_the_race_is_not_active$/;"	f	class:TestRaceBoard.TestPickRace
test_readjust_players_coins_when_no_coins_next_to_races	./tests/models/raceboard_test.rb	/^    def test_readjust_players_coins_when_no_coins_next_to_races$/;"	f	class:TestRaceBoard.TestPickRace
test_readjust_players_coins_when_other_player_picked_race	./tests/models/raceboard_test.rb	/^    def test_readjust_players_coins_when_other_player_picked_race$/;"	f	class:TestRaceBoard.TestPickRace
test_removes_active_race_from_races	./tests/models/raceboard_test.rb	/^    def test_removes_active_race_from_races$/;"	f	class:TestRaceBoard.TestAddRaceChoice
test_returns_6_elements	./tests/models/raceboard_test.rb	/^    def test_returns_6_elements$/;"	f	class:TestRaceBoard.TestPickActiveRaces
test_returns_a_visual_description_of_the_land_types	./tests/models/map_drawer_test.rb	/^  def test_returns_a_visual_description_of_the_land_types$/;"	f	class:TestMapDrawer
test_returns_a_visual_description_of_the_land_types	./tests/models/map_drawer_test.rb	/^  def test_returns_a_visual_description_of_the_land_types$/;"	f	class:TestMapDrawer
test_svg_coordinates_transform_coordinates_into_a_svg_string_of_points	./tests/models/region_test.rb	/^  def test_svg_coordinates_transform_coordinates_into_a_svg_string_of_points$/;"	f	class:TestRegion
test_throw_error_if_races_already_picked	./tests/models/raceboard_test.rb	/^    def test_throw_error_if_races_already_picked$/;"	f	class:TestRaceBoard.TestPickActiveRaces
test_throw_error_if_too_many_races_required	./tests/models/raceboard_test.rb	/^    def test_throw_error_if_too_many_races_required$/;"	f	class:TestRaceBoard.TestPickActiveRaces
test_throws_error_if_not_enough_races	./tests/models/raceboard_test.rb	/^    def test_throws_error_if_not_enough_races$/;"	f	class:TestRaceBoard.TestPickRace
test_to_svg_transform_region_to_the_svg_format	./tests/models/region_test.rb	/^  def test_to_svg_transform_region_to_the_svg_format$/;"	f	class:TestRegion
text_id_coordinate_x	./models/region.rb	/^  def text_id_coordinate_x$/;"	f	class:Region
text_id_coordinate_y	./models/region.rb	/^  def text_id_coordinate_y$/;"	f	class:Region
text_name_coordinate_y	./models/region.rb	/^  def text_name_coordinate_y$/;"	f	class:Region
to_svg	./models/region.rb	/^  def to_svg(players)$/;"	f	class:Region
troops_number	./models/race.rb	/^  attr_accessor :troops_number$/;"	f	class:Race
troops_number=	./models/race.rb	/^  attr_accessor :troops_number$/;"	f	class:Race
turn_played	./models/turn_tracker.rb	/^  attr_accessor :turns_left, :players, :turn_played, :actual_turn$/;"	f	class:TurnTracker
turn_played=	./models/turn_tracker.rb	/^  attr_accessor :turns_left, :players, :turn_played, :actual_turn$/;"	f	class:TurnTracker
turn_played_by_all	./models/turn_tracker.rb	/^  def turn_played_by_all$/;"	f	class:TurnTracker
turn_tracker	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
turn_tracker=	./config/game_state.rb	/^  attr_accessor :players, :raceboard, :races, :land_types, :map, :turn_tracker$/;"	f	class:GameState
turn_tracker_generate	./config/game_state.rb	/^  def turn_tracker_generate$/;"	f	class:GameState
turns_left	./models/turn_tracker.rb	/^  attr_accessor :turns_left, :players, :turn_played, :actual_turn$/;"	f	class:TurnTracker
turns_left=	./models/turn_tracker.rb	/^  attr_accessor :turns_left, :players, :turn_played, :actual_turn$/;"	f	class:TurnTracker
update	./models/turn_tracker.rb	/^  def update(player)$/;"	f	class:TurnTracker
width	./models/map.rb	/^  attr_reader :width, :height, :grid_width$/;"	f	class:Map
